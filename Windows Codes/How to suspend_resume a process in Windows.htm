<!DOCTYPE html>
<html hasbrowserhandlers="true"><head>
  <meta content="text/html; charset=UTF-8" http-equiv="content-type">
  <meta name="viewport" content="width=device-width; user-scalable=0">

  <link rel="stylesheet" href="How%20to%20suspend_resume%20a%20process%20in%20Windows_files/aboutReader.css" type="text/css">

  <script type="text/javascript" src="How%20to%20suspend_resume%20a%20process%20in%20Windows_files/aboutReader.js"></script>
<link rel="stylesheet" href="How%20to%20suspend_resume%20a%20process%20in%20Windows_files/narrate.css"><title>How to suspend/resume a process in Windows?</title><link rel="shortcut icon" href="https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d"></head>

<body class="light sans-serif loaded">
  <div id="container" class="container font-size5 content-width3">
    <div id="reader-header" class="header" style="display: block;">
      <style scoped="">
        @import url("chrome://global/skin/aboutReaderControls.css");
      </style>
      <a id="reader-domain" class="domain" href="https://stackoverflow.com/questions/11010165/how-to-suspend-resume-a-process-in-windows">stackoverflow.com</a>
      <div class="domain-border"></div>
      <h1 id="reader-title">How to suspend/resume a process in Windows?</h1>
      <div id="reader-credits" class="credits"></div>
      <div id="meta-data" class="meta-data">
        <div id="reader-estimated-time">3-4 minutes</div>
      </div>
    </div>

    <hr>

    <div class="content">
      <style scoped="">
        @import url("chrome://global/skin/aboutReaderContent.css");
      </style>
      <div id="moz-reader-content" class="line-height4" style="display: block;"><div id="readability-page-1" class="page"><div class="post-text" itemprop="text">
<p>You can't do it from the command line, you have to write some code (I
 assume you're not just looking for an utility otherwise Super User may 
be a better place to ask). I also assume your application has all the 
required permissions to do it (examples are without any error checking).</p>

<h2>Hard Way</h2>

<p>First get all the threads of a given process then call the <code>SuspendThread</code> function to stop each one (and <code>ResumeThread</code>
 to resume). It works but some applications may crash or hung because a 
thread may be stopped in any point and the order of suspend/resume is 
unpredictable (for example this may cause a dead lock). For a single 
threaded application this may not be an issue.</p>

<pre><code>void suspend(DWORD processId)
{
    HANDLE hThreadSnapshot = CreateToolhelp32Snapshot(TH32CS_SNAPTHREAD, 0);

    THREADENTRY32 threadEntry; 
    threadEntry.dwSize = sizeof(THREADENTRY32);

    Thread32First(hThreadSnapshot, &amp;threadEntry);

    do
    {
        if (threadEntry.th32OwnerProcessID == processId)
        {
            HANDLE hThread = OpenThread(THREAD_ALL_ACCESS, FALSE,
                threadEntry.th32ThreadID);

            SuspendThread(hThread);
            CloseHandle(hThread);
        }
    } while (Thread32Next(hThreadSnapshot, &amp;threadEntry));

    CloseHandle(hThreadSnapshot);
}
</code></pre>

<p>Please note that this function is even too much naive, to resume 
threads you should skip threads that was suspended and it's easy to 
cause a dead-lock because of suspend/resume order. For single threaded 
applications it's prolix but it works. </p>

<h2>Undocumented way</h2>

<p>Starting from Windows XP there is the <code>NtSuspendProcess</code> but it's <em>undocumented</em>. Read <a href="http://forum.sysinternals.com/suspend-a-process_topic17442_page2.html" rel="noreferrer">this post</a> for a code example (reference for undocumented functions: news://comp.os.ms-windows.programmer.win32).</p>

<pre><code>typedef LONG (NTAPI *NtSuspendProcess)(IN HANDLE ProcessHandle);

void suspend(DWORD processId)
{
    HANDLE processHandle = OpenProcess(PROCESS_ALL_ACCESS, FALSE, processId));

    NtSuspendProcess pfnNtSuspendProcess = (NtSuspendProcess)GetProcAddress(
        GetModuleHandle("ntdll"), "NtSuspendProcess");

    pfnNtSuspendProcess(processHandle);
    CloseHandle(processHandle);
}
</code></pre>

<h2>"Debugger" Way</h2>

<p>To suspend a program is what usually a debugger does, to do it you can use the <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms679295%28v=vs.85%29.aspx" rel="noreferrer"><code>DebugActiveProcess</code></a> function. It'll suspend the process execution (with all threads all together). To resume you may use <code>DebugActiveProcessStop</code>.</p>

<p>This function lets you stop a process (given its Process ID), syntax 
is very simple: just pass the ID of the process you want to stop 
et-voila. If you'll make a command line application you'll need to keep 
its instance running to keep the process suspended (or it'll be 
terminated). See the <em>Remarks</em> section on MSDN for details.</p>

<pre><code>void suspend(DWORD processId)
{
    DebugActiveProcess(processId);
}
</code></pre>

<h2>From Command Line</h2>

<p>As I said Windows command line has not any utility to do that but you
 can invoke a Windows API function from PowerShell. First install <a href="http://poshcode.org/2189" rel="noreferrer">Invoke-WindowsApi</a> script then you can write this:</p>

<pre><code>Invoke-WindowsApi "kernel32" ([bool]) "DebugActiveProcess" @([int]) @(process_id_here)
</code></pre>

<p>Of course if you need it often you can make an <code>alias</code> for that.</p>
    </div></div></div>
    </div>

    <div>
      <style scoped="">
        @import url("chrome://global/skin/aboutReaderControls.css");
      </style>
      <div id="reader-message" style="display: none;"></div>
    </div>
  </div>

  <ul id="reader-toolbar" class="toolbar">
    <style scoped="">
      @import url("chrome://global/skin/aboutReaderControls.css");
    </style>
    <li><button id="close-button" class="button close-button" title="Close Reader View"></button></li>
    <ul id="style-dropdown" class="dropdown">
      <li><button class="dropdown-toggle button style-button" title="Type controls"></button></li>
      <li id="reader-popup" class="dropdown-popup">
        <div id="font-type-buttons"><button class="sans-serif-button selected"><div class="name">Aa</div><div class="description">Sans-serif</div></button><button class="serif-button"><div class="name">Aa</div><div class="description">Serif</div></button></div>
        <hr>
        <div id="font-size-buttons">
          <button id="font-size-minus" class="minus-button">
          </button><button id="font-size-sample">Aa</button><button id="font-size-plus" class="plus-button">
        </button></div>
        <hr>
        <div id="content-width-buttons">
          <button id="content-width-minus" class="content-width-minus-button">
          </button><button id="content-width-plus" class="content-width-plus-button">
        </button></div>
        <hr>
        <div id="line-height-buttons">
          <button id="line-height-minus" class="line-height-minus-button">
          </button><button id="line-height-plus" class="line-height-plus-button">
        </button></div>
        <hr>
        <div id="color-scheme-buttons"><button class="light-button selected"><div class="name">Light</div></button><button class="dark-button"><div class="name">Dark</div></button><button class="sepia-button"><div class="name">Sepia</div></button></div>
        <div class="dropdown-arrow">
      </div></li>
    </ul>
  <ul class="dropdown" id="narrate-dropdown"><style scoped="">
      @import url("chrome://global/skin/narrateControls.css");
    </style>
    <li>
       <button class="dropdown-toggle button" id="narrate-toggle" title="Narrate" hidden="">
         <svg xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" width="24" height="24" viewBox="0 0 24 24">
          <style>
            @keyframes grow {
              0%   { transform: scaleY(1);   }
              15%  { transform: scaleY(1.5); }
              15%  { transform: scaleY(1.5); }
              30%  { transform: scaleY(1);   }
              100% { transform: scaleY(1);   }
            }

            #waveform &gt; rect {
              fill: #808080;
            }

            .speaking #waveform &gt; rect {
              fill: #58bf43;
              transform-box: fill-box;
              transform-origin: 50% 50%;
              animation-name: grow;
              animation-duration: 1750ms;
              animation-iteration-count: infinite;
              animation-timing-function: linear;
            }

            #waveform &gt; rect:nth-child(2) { animation-delay: 250ms; }
            #waveform &gt; rect:nth-child(3) { animation-delay: 500ms; }
            #waveform &gt; rect:nth-child(4) { animation-delay: 750ms; }
            #waveform &gt; rect:nth-child(5) { animation-delay: 1000ms; }
            #waveform &gt; rect:nth-child(6) { animation-delay: 1250ms; }
            #waveform &gt; rect:nth-child(7) { animation-delay: 1500ms; }

          </style>
          <g id="waveform">
            <rect x="1" y="8" width="2" height="8" rx=".5" ry=".5"></rect>
            <rect x="4" y="5" width="2" height="14" rx=".5" ry=".5"></rect>
            <rect x="7" y="8" width="2" height="8" rx=".5" ry=".5"></rect>
            <rect x="10" y="4" width="2" height="16" rx=".5" ry=".5"></rect>
            <rect x="13" y="2" width="2" height="20" rx=".5" ry=".5"></rect>
            <rect x="16" y="4" width="2" height="16" rx=".5" ry=".5"></rect>
            <rect x="19" y="7" width="2" height="10" rx=".5" ry=".5"></rect>
          </g>
         </svg>
        </button>
    </li>
    <li class="dropdown-popup">
      <div id="narrate-control" class="narrate-row">
        <button disabled="disabled" id="narrate-skip-previous" title="Back"></button>
        <button id="narrate-start-stop" title="Start"></button>
        <button disabled="disabled" id="narrate-skip-next" title="Forward"></button>
      </div>
      <div id="narrate-rate" class="narrate-row">
        <input id="narrate-rate-input" value="0" title="Speed" step="5" max="100" min="-100" type="range">
      </div>
      <div id="narrate-voices" class="narrate-row"><div class="voiceselect" id="voice-select"><button class="select-toggle" aria-controls="voice-options">
      <span class="label">Voice:</span> <span class="current-voice"></span>
    </button>
    <div class="options" id="voice-options" role="listbox" style="max-height: 961px;"></div></div></div>
      <div class="dropdown-arrow"></div>
    </li></ul><button class="button" style="background-image: url('chrome://pocket/content/panels/img/pocket.svg#pocket-mark')" id="pocket-button" title="Save to Pocket"></button></ul>




</body></html>